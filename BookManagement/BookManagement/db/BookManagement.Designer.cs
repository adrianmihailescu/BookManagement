//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("BookManagementModel", "FK_Book_Author", "Author", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BookManagement.db.Author), "Book", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BookManagement.db.Book), true)]
[assembly: EdmRelationshipAttribute("BookManagementModel", "FK_Book_Category", "Category", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BookManagement.db.Category), "Book", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BookManagement.db.Book), true)]
[assembly: EdmRelationshipAttribute("BookManagementModel", "FK_Lease_Book", "Book", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BookManagement.db.Book), "Lease", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BookManagement.db.Lease), true)]
[assembly: EdmRelationshipAttribute("BookManagementModel", "FK_Lease_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BookManagement.db.User), "Lease", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BookManagement.db.Lease), true)]

#endregion

namespace BookManagement.db
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class BookManagementEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new BookManagementEntities object using the connection string found in the 'BookManagementEntities' section of the application configuration file.
        /// </summary>
        public BookManagementEntities() : base("name=BookManagementEntities", "BookManagementEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new BookManagementEntities object.
        /// </summary>
        public BookManagementEntities(string connectionString) : base(connectionString, "BookManagementEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new BookManagementEntities object.
        /// </summary>
        public BookManagementEntities(EntityConnection connection) : base(connection, "BookManagementEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Author> Author
        {
            get
            {
                if ((_Author == null))
                {
                    _Author = base.CreateObjectSet<Author>("Author");
                }
                return _Author;
            }
        }
        private ObjectSet<Author> _Author;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Book> Book
        {
            get
            {
                if ((_Book == null))
                {
                    _Book = base.CreateObjectSet<Book>("Book");
                }
                return _Book;
            }
        }
        private ObjectSet<Book> _Book;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Category> Category
        {
            get
            {
                if ((_Category == null))
                {
                    _Category = base.CreateObjectSet<Category>("Category");
                }
                return _Category;
            }
        }
        private ObjectSet<Category> _Category;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Lease> Lease
        {
            get
            {
                if ((_Lease == null))
                {
                    _Lease = base.CreateObjectSet<Lease>("Lease");
                }
                return _Lease;
            }
        }
        private ObjectSet<Lease> _Lease;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> User
        {
            get
            {
                if ((_User == null))
                {
                    _User = base.CreateObjectSet<User>("User");
                }
                return _User;
            }
        }
        private ObjectSet<User> _User;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Author EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAuthor(Author author)
        {
            base.AddObject("Author", author);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Book EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBook(Book book)
        {
            base.AddObject("Book", book);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Category EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCategory(Category category)
        {
            base.AddObject("Category", category);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Lease EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLease(Lease lease)
        {
            base.AddObject("Lease", lease);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the User EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUser(User user)
        {
            base.AddObject("User", user);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BookManagementModel", Name="Author")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Author : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Author object.
        /// </summary>
        /// <param name="iDAuthor">Initial value of the IDAuthor property.</param>
        /// <param name="authorName">Initial value of the AuthorName property.</param>
        public static Author CreateAuthor(global::System.Int32 iDAuthor, global::System.String authorName)
        {
            Author author = new Author();
            author.IDAuthor = iDAuthor;
            author.AuthorName = authorName;
            return author;
        }

        #endregion
        #region Primitive Properties

        /// <summary>
        /// display values in foreign keys
        /// </summary>
        /// <returns></returns>
        public override string ToString()
        {
            string returnValue = Utils.ReplaceCharCodesToChars(this.AuthorName);

            return returnValue;
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDAuthor
        {
            get
            {
                return _IDAuthor;
            }
            set
            {
                if (_IDAuthor != value)
                {
                    OnIDAuthorChanging(value);
                    ReportPropertyChanging("IDAuthor");
                    _IDAuthor = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IDAuthor");
                    OnIDAuthorChanged();
                }
            }
        }
        private global::System.Int32 _IDAuthor;
        partial void OnIDAuthorChanging(global::System.Int32 value);
        partial void OnIDAuthorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        [FilterUIHint("custom/TextFilter")]
        public global::System.String AuthorName
        {
            get
            {
                return _AuthorName;
            }
            set
            {
                OnAuthorNameChanging(value);
                ReportPropertyChanging("AuthorName");
                _AuthorName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AuthorName");
                OnAuthorNameChanged();
            }
        }
        private global::System.String _AuthorName;
        partial void OnAuthorNameChanging(global::System.String value);
        partial void OnAuthorNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        [Editable(false)]
        public Nullable<global::System.Boolean> FlagDel
        {
            get
            {
                return _FlagDel;
            }
            set
            {
                OnFlagDelChanging(value);
                ReportPropertyChanging("FlagDel");
                _FlagDel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FlagDel");
                OnFlagDelChanged();
            }
        }
        private Nullable<global::System.Boolean> _FlagDel;
        partial void OnFlagDelChanging(Nullable<global::System.Boolean> value);
        partial void OnFlagDelChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BookManagementModel", "FK_Book_Author", "Book")]
        public EntityCollection<Book> Book
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Book>("BookManagementModel.FK_Book_Author", "Book");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Book>("BookManagementModel.FK_Book_Author", "Book", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BookManagementModel", Name="Book")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Book : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Book object.
        /// </summary>
        /// <param name="iDBook">Initial value of the IDBook property.</param>
        /// <param name="iDCategory">Initial value of the IDCategory property.</param>
        /// <param name="iDAuthor">Initial value of the IDAuthor property.</param>
        /// <param name="bookName">Initial value of the BookName property.</param>
        /// <param name="iSBN">Initial value of the ISBN property.</param>
        /// <param name="stock">Initial value of the Stock property.</param>
        public static Book CreateBook(global::System.Int32 iDBook, global::System.Int32 iDCategory, global::System.Int32 iDAuthor, global::System.String bookName, global::System.String iSBN, global::System.Int32 stock)
        {
            Book book = new Book();
            book.IDBook = iDBook;
            book.IDCategory = iDCategory;
            book.IDAuthor = iDAuthor;
            book.BookName = bookName;
            book.ISBN = iSBN;
            book.Stock = stock;
            return book;
        }

        #endregion
        #region Primitive Properties

        /// <summary>
        /// display values in foreign keys
        /// </summary>
        /// <returns></returns>
        public override string ToString()
        {
            string returnValue = Utils.ReplaceCharCodesToChars(this.BookName);

            return returnValue;
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDBook
        {
            get
            {
                return _IDBook;
            }
            set
            {
                if (_IDBook != value)
                {
                    OnIDBookChanging(value);
                    ReportPropertyChanging("IDBook");
                    _IDBook = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IDBook");
                    OnIDBookChanged();
                }
            }
        }
        private global::System.Int32 _IDBook;
        partial void OnIDBookChanging(global::System.Int32 value);
        partial void OnIDBookChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDCategory
        {
            get
            {
                return _IDCategory;
            }
            set
            {
                OnIDCategoryChanging(value);
                ReportPropertyChanging("IDCategory");
                _IDCategory = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDCategory");
                OnIDCategoryChanged();
            }
        }
        private global::System.Int32 _IDCategory;
        partial void OnIDCategoryChanging(global::System.Int32 value);
        partial void OnIDCategoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDAuthor
        {
            get
            {
                return _IDAuthor;
            }
            set
            {
                OnIDAuthorChanging(value);
                ReportPropertyChanging("IDAuthor");
                _IDAuthor = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDAuthor");
                OnIDAuthorChanged();
            }
        }
        private global::System.Int32 _IDAuthor;
        partial void OnIDAuthorChanging(global::System.Int32 value);
        partial void OnIDAuthorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        [FilterUIHint("custom/TextFilter")]
        public global::System.String BookName
        {
            get
            {
                return _BookName;
            }
            set
            {
                OnBookNameChanging(value);
                ReportPropertyChanging("BookName");
                _BookName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BookName");
                OnBookNameChanged();
            }
        }
        private global::System.String _BookName;
        partial void OnBookNameChanging(global::System.String value);
        partial void OnBookNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        [FilterUIHint("custom/TextFilter")]
        public global::System.String ISBN
        {
            get
            {
                return _ISBN;
            }
            set
            {
                OnISBNChanging(value);
                ReportPropertyChanging("ISBN");
                _ISBN = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ISBN");
                OnISBNChanged();
            }
        }
        private global::System.String _ISBN;
        partial void OnISBNChanging(global::System.String value);
        partial void OnISBNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        [Range(0, int.MaxValue)]
        public global::System.Int32 Stock
        {
            get
            {
                return _Stock;
            }
            set
            {
                OnStockChanging(value);
                ReportPropertyChanging("Stock");
                _Stock = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Stock");
                OnStockChanged();
            }
        }
        private global::System.Int32 _Stock;
        partial void OnStockChanging(global::System.Int32 value);
        partial void OnStockChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        [UIHint("Boolean")]
        public Nullable<global::System.Boolean> HasDisk
        {
            get
            {
                return _HasDisk;
            }
            set
            {
                OnHasDiskChanging(value);
                ReportPropertyChanging("HasDisk");
                _HasDisk = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HasDisk");
                OnHasDiskChanged();
            }
        }
        private Nullable<global::System.Boolean> _HasDisk;
        partial void OnHasDiskChanging(Nullable<global::System.Boolean> value);
        partial void OnHasDiskChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [Editable(false)]
        public Nullable<global::System.Boolean> FlagDel
        {
            get
            {
                return _FlagDel;
            }
            set
            {
                OnFlagDelChanging(value);
                ReportPropertyChanging("FlagDel");
                _FlagDel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FlagDel");
                OnFlagDelChanged();
            }
        }
        private Nullable<global::System.Boolean> _FlagDel;
        partial void OnFlagDelChanging(Nullable<global::System.Boolean> value);
        partial void OnFlagDelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        [UIHint("custom/Picture")]
        public global::System.Byte[] Image
        {
            get
            {
                return StructuralObject.GetValidValue(_Image);
            }
            set
            {
                OnImageChanging(value);
                ReportPropertyChanging("Image");
                _Image = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Image");
                OnImageChanged();
            }
        }
        private global::System.Byte[] _Image;
        partial void OnImageChanging(global::System.Byte[] value);
        partial void OnImageChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BookManagementModel", "FK_Book_Author", "Author")]
        public Author Author
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Author>("BookManagementModel.FK_Book_Author", "Author").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Author>("BookManagementModel.FK_Book_Author", "Author").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Author> AuthorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Author>("BookManagementModel.FK_Book_Author", "Author");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Author>("BookManagementModel.FK_Book_Author", "Author", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BookManagementModel", "FK_Book_Category", "Category")]
        public Category Category
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("BookManagementModel.FK_Book_Category", "Category").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("BookManagementModel.FK_Book_Category", "Category").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Category> CategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("BookManagementModel.FK_Book_Category", "Category");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Category>("BookManagementModel.FK_Book_Category", "Category", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BookManagementModel", "FK_Lease_Book", "Lease")]
        public EntityCollection<Lease> Lease
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Lease>("BookManagementModel.FK_Lease_Book", "Lease");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Lease>("BookManagementModel.FK_Lease_Book", "Lease", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BookManagementModel", Name="Category")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Category : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Category object.
        /// </summary>
        /// <param name="iDCategory">Initial value of the IDCategory property.</param>
        public static Category CreateCategory(global::System.Int32 iDCategory)
        {
            Category category = new Category();
            category.IDCategory = iDCategory;
            return category;
        }

        #endregion
        #region Primitive Properties
        /// <summary>
        /// display values in foreign keys
        /// </summary>
        /// <returns></returns>
        public override string ToString()
        {
            string returnValue = Utils.ReplaceCharCodesToChars(this.CategoryName);

            return returnValue;
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDCategory
        {
            get
            {
                return _IDCategory;
            }
            set
            {
                if (_IDCategory != value)
                {
                    OnIDCategoryChanging(value);
                    ReportPropertyChanging("IDCategory");
                    _IDCategory = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IDCategory");
                    OnIDCategoryChanged();
                }
            }
        }
        private global::System.Int32 _IDCategory;
        partial void OnIDCategoryChanging(global::System.Int32 value);
        partial void OnIDCategoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        [FilterUIHint("custom/TextFilter")]
        public global::System.String CategoryName
        {
            get
            {
                return _CategoryName;
            }
            set
            {
                OnCategoryNameChanging(value);
                ReportPropertyChanging("CategoryName");
                _CategoryName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CategoryName");
                OnCategoryNameChanged();
            }
        }
        private global::System.String _CategoryName;
        partial void OnCategoryNameChanging(global::System.String value);
        partial void OnCategoryNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        [Editable(false)]
        public Nullable<global::System.Boolean> FlagDel
        {
            get
            {
                return _FlagDel;
            }
            set
            {
                OnFlagDelChanging(value);
                ReportPropertyChanging("FlagDel");
                _FlagDel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FlagDel");
                OnFlagDelChanged();
            }
        }
        private Nullable<global::System.Boolean> _FlagDel;
        partial void OnFlagDelChanging(Nullable<global::System.Boolean> value);
        partial void OnFlagDelChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BookManagementModel", "FK_Book_Category", "Book")]
        public EntityCollection<Book> Book
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Book>("BookManagementModel.FK_Book_Category", "Book");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Book>("BookManagementModel.FK_Book_Category", "Book", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BookManagementModel", Name="Lease")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Lease : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Lease object.
        /// </summary>
        /// <param name="iDLease">Initial value of the IDLease property.</param>
        /// <param name="iDBook">Initial value of the IDBook property.</param>
        /// <param name="iDUser">Initial value of the IDUser property.</param>
        /// <param name="scheduledReturnDate">Initial value of the ScheduledReturnDate property.</param>
        /// <param name="copies">Initial value of the Copies property.</param>
        public static Lease CreateLease(global::System.Int32 iDLease, global::System.Int32 iDBook, global::System.Int32 iDUser, global::System.DateTime scheduledReturnDate, global::System.Int32 copies)
        {
            Lease lease = new Lease();
            lease.IDLease = iDLease;
            lease.IDBook = iDBook;
            lease.IDUser = iDUser;
            lease.ScheduledReturnDate = scheduledReturnDate;
            lease.Copies = copies;
            return lease;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDLease
        {
            get
            {
                return _IDLease;
            }
            set
            {
                if (_IDLease != value)
                {
                    OnIDLeaseChanging(value);
                    ReportPropertyChanging("IDLease");
                    _IDLease = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IDLease");
                    OnIDLeaseChanged();
                }
            }
        }
        private global::System.Int32 _IDLease;
        partial void OnIDLeaseChanging(global::System.Int32 value);
        partial void OnIDLeaseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDBook
        {
            get
            {
                return _IDBook;
            }
            set
            {
                OnIDBookChanging(value);
                ReportPropertyChanging("IDBook");
                _IDBook = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDBook");
                OnIDBookChanged();
            }
        }
        private global::System.Int32 _IDBook;
        partial void OnIDBookChanging(global::System.Int32 value);
        partial void OnIDBookChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDUser
        {
            get
            {
                return _IDUser;
            }
            set
            {
                OnIDUserChanging(value);
                ReportPropertyChanging("IDUser");
                _IDUser = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDUser");
                OnIDUserChanged();
            }
        }
        private global::System.Int32 _IDUser;
        partial void OnIDUserChanging(global::System.Int32 value);
        partial void OnIDUserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        [UIHint("custom/DateTimeNonEditable")]
        public Nullable<global::System.DateTime> LeaseDate
        {
            get
            {
                return _LeaseDate;
            }
            set
            {
                OnLeaseDateChanging(value);
                ReportPropertyChanging("LeaseDate");
                _LeaseDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LeaseDate");
                OnLeaseDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LeaseDate;
        partial void OnLeaseDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLeaseDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        [UIHint("custom/DateTime")]
        public global::System.DateTime ScheduledReturnDate
        {
            get
            {
                return _ScheduledReturnDate;
            }
            set
            {
                OnScheduledReturnDateChanging(value);
                ReportPropertyChanging("ScheduledReturnDate");
                _ScheduledReturnDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ScheduledReturnDate");
                OnScheduledReturnDateChanged();
            }
        }
        private global::System.DateTime _ScheduledReturnDate;
        partial void OnScheduledReturnDateChanging(global::System.DateTime value);
        partial void OnScheduledReturnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        [UIHint("custom/DateTimeReadWrite")]
        public Nullable<global::System.DateTime> ActualReturnDate
        {
            get
            {
                return _ActualReturnDate;
            }
            set
            {
                OnActualReturnDateChanging(value);
                ReportPropertyChanging("ActualReturnDate");
                _ActualReturnDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActualReturnDate");
                OnActualReturnDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ActualReturnDate;
        partial void OnActualReturnDateChanging(Nullable<global::System.DateTime> value);
        partial void OnActualReturnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        [Range(0, int.MaxValue)]
        [UIHint("Integer")]
        public global::System.Int32 Copies
        {
            get
            {
                return _Copies;
            }
            set
            {
                OnCopiesChanging(value);
                ReportPropertyChanging("Copies");
                _Copies = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Copies");
                OnCopiesChanged();
            }
        }
        private global::System.Int32 _Copies;
        partial void OnCopiesChanging(global::System.Int32 value);
        partial void OnCopiesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        [Editable(false)]
        public Nullable<global::System.Boolean> FlagDel
        {
            get
            {
                return _FlagDel;
            }
            set
            {
                OnFlagDelChanging(value);
                ReportPropertyChanging("FlagDel");
                _FlagDel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FlagDel");
                OnFlagDelChanged();
            }
        }
        private Nullable<global::System.Boolean> _FlagDel;
        partial void OnFlagDelChanging(Nullable<global::System.Boolean> value);
        partial void OnFlagDelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        [UIHint("custom/TextArea")]
        public global::System.String Remarks
        {
            get
            {
                return _Remarks;
            }
            set
            {
                OnRemarksChanging(value);
                ReportPropertyChanging("Remarks");
                _Remarks = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Remarks");
                OnRemarksChanged();
            }
        }
        private global::System.String _Remarks;
        partial void OnRemarksChanging(global::System.String value);
        partial void OnRemarksChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BookManagementModel", "FK_Lease_Book", "Book")]
        public Book Book
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Book>("BookManagementModel.FK_Lease_Book", "Book").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Book>("BookManagementModel.FK_Lease_Book", "Book").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Book> BookReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Book>("BookManagementModel.FK_Lease_Book", "Book");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Book>("BookManagementModel.FK_Lease_Book", "Book", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BookManagementModel", "FK_Lease_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BookManagementModel.FK_Lease_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BookManagementModel.FK_Lease_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BookManagementModel.FK_Lease_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("BookManagementModel.FK_Lease_Users", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BookManagementModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="iDUser">Initial value of the IDUser property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="fullName">Initial value of the FullName property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="address">Initial value of the Address property.</param>
        /// <param name="cNP">Initial value of the CNP property.</param>
        public static User CreateUser(global::System.Int32 iDUser, global::System.String userName, global::System.String fullName, global::System.String email, global::System.String address, global::System.String cNP)
        {
            User user = new User();
            user.IDUser = iDUser;
            user.UserName = userName;
            user.FullName = fullName;
            user.Email = email;
            user.Address = address;
            user.CNP = cNP;
            return user;
        }

        #endregion
        #region Primitive Properties

        /// <summary>
        /// display values in foreign keys
        /// </summary>
        /// <returns></returns>
        public override string ToString()
        {
            string returnValue = Utils.ReplaceCharCodesToChars(this.UserName);

            return returnValue;
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDUser
        {
            get
            {
                return _IDUser;
            }
            set
            {
                if (_IDUser != value)
                {
                    OnIDUserChanging(value);
                    ReportPropertyChanging("IDUser");
                    _IDUser = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IDUser");
                    OnIDUserChanged();
                }
            }
        }
        private global::System.Int32 _IDUser;
        partial void OnIDUserChanging(global::System.Int32 value);
        partial void OnIDUserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        [FilterUIHint("custom/TextFilter")]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        [FilterUIHint("custom/TextFilter")]
        public global::System.String FullName
        {
            get
            {
                return _FullName;
            }
            set
            {
                OnFullNameChanging(value);
                ReportPropertyChanging("FullName");
                _FullName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FullName");
                OnFullNameChanged();
            }
        }
        private global::System.String _FullName;
        partial void OnFullNameChanging(global::System.String value);
        partial void OnFullNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        [FilterUIHint("custom/TextFilter")]
        [UIHint("EmailAddress")]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        [FilterUIHint("custom/TextFilter")]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        [Editable(false)]
        public Nullable<global::System.Boolean> FlagDel
        {
            get
            {
                return _FlagDel;
            }
            set
            {
                OnFlagDelChanging(value);
                ReportPropertyChanging("FlagDel");
                _FlagDel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FlagDel");
                OnFlagDelChanged();
            }
        }
        private Nullable<global::System.Boolean> _FlagDel;
        partial void OnFlagDelChanging(Nullable<global::System.Boolean> value);
        partial void OnFlagDelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        [FilterUIHint("custom/TextFilter")]
        public global::System.String CNP
        {
            get
            {
                return _CNP;
            }
            set
            {
                OnCNPChanging(value);
                ReportPropertyChanging("CNP");
                _CNP = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CNP");
                OnCNPChanged();
            }
        }
        private global::System.String _CNP;
        partial void OnCNPChanging(global::System.String value);
        partial void OnCNPChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        [UIHint("custom/Picture")]
        public global::System.Byte[] Image
        {
            get
            {
                return StructuralObject.GetValidValue(_Image);
            }
            set
            {
                OnImageChanging(value);
                ReportPropertyChanging("Image");
                _Image = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Image");
                OnImageChanged();
            }
        }
        private global::System.Byte[] _Image;
        partial void OnImageChanging(global::System.Byte[] value);
        partial void OnImageChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BookManagementModel", "FK_Lease_Users", "Lease")]
        public EntityCollection<Lease> Lease
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Lease>("BookManagementModel.FK_Lease_Users", "Lease");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Lease>("BookManagementModel.FK_Lease_Users", "Lease", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
